// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

declare namespace JSX {
  type FunctionElement<P> = ((props: P) => Element<P>)

  interface Element<P={}> {
    props: P
    type: string | FunctionElement<P>
  }

  interface ElementChildrenAttribute {
    children?: Array<Element<unknown>> | Element<unknown>
  }

  interface IntrinsicElements {
    template: { name: string, parent?: object, props?: any } & ElementChildrenAttribute
  }

  interface IntrinsicAttributes {
    key?: string
  }

  interface LabelAttribute {
    __id: string | null
  }
}

declare module "vtex.add-to-cart-button" {
  export function AddToCartButton(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
}

declare module "vtex.blog-interfaces" {
  export function BlogAllPosts(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function BlogBreadcrumb(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function BlogCategoryList(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function BlogCategoryPreview(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function BlogLatestPostsPreview(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function BlogPostDetails(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function BlogRelatedPosts(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function BlogRelatedProducts(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function BlogSearch(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function BlogSearchList(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function SearchBlogArticlesList(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function SearchBlogArticlesPreview(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
}

declare module "vtex.breadcrumb" {
  export function Breadcrumb(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  module Breadcrumb {
    export function Product(
      props: {
        [k: string]: any
      } & JSX.ElementChildrenAttribute &
        JSX.LabelAttribute
    ): any
  }
  module Breadcrumb {
    export function Search(
      props: {
        [k: string]: any
      } & JSX.ElementChildrenAttribute &
        JSX.LabelAttribute
    ): any
  }
}

declare module "vtex.carousel" {
  export function Carousel(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
}

declare module "vtex.category-menu" {
  export function CategoryMenu(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
}

declare module "vtex.checkout-summary" {
  export function CheckoutSummary(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  module CheckoutSummary {
    export function Compact(
      props: {
        [k: string]: any
      } & JSX.ElementChildrenAttribute &
        JSX.LabelAttribute
    ): any
  }
  export function SummaryCoupon(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function SummaryTotalizers(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
}

declare module "vtex.coupon" {
  export function Coupon(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
}

declare module "vtex.flex-layout" {
  export function FlexLayout(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  module FlexLayout {
    export function Col(
      props: {
        [k: string]: any
      } & JSX.ElementChildrenAttribute &
        JSX.LabelAttribute
    ): any
  }
  module FlexLayout {
    export function Row(
      props: {
        [k: string]: any
      } & JSX.ElementChildrenAttribute &
        JSX.LabelAttribute
    ): any
  }
}

declare module "vtex.iframe" {
  export function Iframe(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  module Iframe {
    export function DynamicSrc(
      props: {
        [k: string]: any
      } & JSX.ElementChildrenAttribute &
        JSX.LabelAttribute
    ): any
  }
}

declare module "vtex.list-context" {
  export function ListContext(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
}

declare module "vtex.locale-switcher" {
  export function LocaleSwitcher(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
}

declare module "vtex.login" {
  export function Login(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function LoginContent(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function UserIdentifier(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
}

declare module "vtex.menu" {
  export function Menu(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function MenuItem(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function MenuLink(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function Submenu(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function SubmenuCol(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  module Submenu {
    export function Accordion(
      props: {
        [k: string]: any
      } & JSX.ElementChildrenAttribute &
        JSX.LabelAttribute
    ): any
  }
  export function UnstableCol(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function UnstableMenu(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function UnstableMenuItem(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function UnstableSecondLevelMenu(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function UnstableSecondLevelMenuItem(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function UnstableSubmenu(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
}

declare module "vtex.minicart" {
  export function Minicart(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function MinicartBaseContent(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function MinicartEmptyState(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function MinicartProductList(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function MinicartSummary(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  module Minicart {
    export function V2(
      props: {
        [k: string]: any
      } & JSX.ElementChildrenAttribute &
        JSX.LabelAttribute
    ): any
  }
}

declare module "vtex.modal" {
  export function Modal(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
}

declare module "vtex.my-account" {
  export function MyAccount(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function MyAccountDefaultPage(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function MyAccountLink(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function MyAccountMenu(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function MyAccountPage(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function MyAccountPages(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function MyAddressesLink(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function MyProfileLink(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function ProfileDisplay(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function ProfileDisplayContainer(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function ProfileInput(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function ProfileInputContainer(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
}

declare module "vtex.my-cards" {
  export function MyCards(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function MyCardsLink(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
}

declare module "vtex.my-orders-app" {
  export function MyOrders(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function MyOrdersLink(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
}

declare module "vtex.order-placed" {
  export function OrderPlaced(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function OrderPlacedExtension(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function OrderPlacedTop(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
}

declare module "vtex.pickup-availability" {
  export function PickupAvailability(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
}

declare module "vtex.pixel-interfaces" {
  export function Pixel(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function Pixels(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
}

declare module "vtex.product-availability" {
  export function ProductAvailability(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
}

declare module "vtex.product-customizer" {
  export function AssemblyOptionInputValues(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function AssemblyOptionItemChildrenDescription(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function AssemblyOptionItemCustomize(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function AssemblyOptionItemImage(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function AssemblyOptionItemName(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function AssemblyOptionItemPrice(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function AssemblyOptionItemQuantitySelector(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function ProductAssemblyOptions(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  module ProductDetails {
    export function Customizer(
      props: {
        [k: string]: any
      } & JSX.ElementChildrenAttribute &
        JSX.LabelAttribute
    ): any
  }
}

declare module "vtex.product-details" {
  export function AddonDetailsBtn(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function ProductAddToListButton(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function ProductDetails(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function ProductQuantitySelector(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
}

declare module "vtex.product-identifier" {
  export function ProductIdentifier(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  module ProductIdentifier {
    export function Product(
      props: {
        [k: string]: any
      } & JSX.ElementChildrenAttribute &
        JSX.LabelAttribute
    ): any
  }
  module ProductIdentifier {
    export function Summary(
      props: {
        [k: string]: any
      } & JSX.ElementChildrenAttribute &
        JSX.LabelAttribute
    ): any
  }
}

declare module "vtex.product-kit" {
  export function ProductKit(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
}

declare module "vtex.product-list" {
  export function Message(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function Price(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function ProductBrand(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function ProductList(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function ProductListContentDesktop(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function ProductListContentMobile(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function ProductListImage(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function ProductName(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function ProductVariations(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function QuantitySelector(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function RemoveButton(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function UnitPrice(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
}

declare module "vtex.product-quantity" {
  export function ProductQuantity(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function ProductSummaryQuantity(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
}

declare module "vtex.product-review-interfaces" {
  export function ProductQuestionsAndAnswers(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function ProductRatingInline(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function ProductRatingSummary(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function ProductReviewForm(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function ProductReviews(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
}

declare module "vtex.product-specification-badges" {
  export function ProductSpecificationBadges(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
}

declare module "vtex.product-summary" {
  export function AddonSummaryBtn(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function ProductSummary(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function ProductSummaryAddToListButton(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function ProductSummaryAttachmentList(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function ProductSummaryBrand(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function ProductSummaryBuyButton(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function ProductSummaryColumn(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function ProductSummaryDescription(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function ProductSummaryImage(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function ProductSummaryName(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function ProductSummaryPrice(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function ProductSummarySkuSelector(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function ProductSummarySpace(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function ProductSummarySpecificationBadges(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  module ProductSummary {
    export function Shelf(
      props: {
        [k: string]: any
      } & JSX.ElementChildrenAttribute &
        JSX.LabelAttribute
    ): any
  }
  module ProductSummary {
    export function UnstableFlex(
      props: {
        [k: string]: any
      } & JSX.ElementChildrenAttribute &
        JSX.LabelAttribute
    ): any
  }
  export function UnstableProductSummaryColumn(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
}

declare module "vtex.product-teaser-interfaces" {
  export function ProductTeaser(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  module ProductTeaser {
    export function Product(
      props: {
        [k: string]: any
      } & JSX.ElementChildrenAttribute &
        JSX.LabelAttribute
    ): any
  }
  module ProductTeaser {
    export function Summary(
      props: {
        [k: string]: any
      } & JSX.ElementChildrenAttribute &
        JSX.LabelAttribute
    ): any
  }
}

declare module "vtex.pwa-components" {
  export function OfflineWarning(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function PromotionBanner(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
}

declare module "vtex.rebuy" {
  export function Greeting(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function Rebuy(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
}

declare module "vtex.responsive-layout" {
  export function ResponsiveLayout(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  module ResponsiveLayout {
    export function Desktop(
      props: {
        [k: string]: any
      } & JSX.ElementChildrenAttribute &
        JSX.LabelAttribute
    ): any
  }
  module ResponsiveLayout {
    export function Mobile(
      props: {
        [k: string]: any
      } & JSX.ElementChildrenAttribute &
        JSX.LabelAttribute
    ): any
  }
  module ResponsiveLayout {
    export function Phone(
      props: {
        [k: string]: any
      } & JSX.ElementChildrenAttribute &
        JSX.LabelAttribute
    ): any
  }
  module ResponsiveLayout {
    export function Tablet(
      props: {
        [k: string]: any
      } & JSX.ElementChildrenAttribute &
        JSX.LabelAttribute
    ): any
  }
}

declare module "vtex.rich-text" {
  export function RichText(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
}

declare module "vtex.sandbox" {
  export function Sandbox(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  module Sandbox {
    export function Order(
      props: {
        [k: string]: any
      } & JSX.ElementChildrenAttribute &
        JSX.LabelAttribute
    ): any
  }
  module Sandbox {
    export function Product(
      props: {
        [k: string]: any
      } & JSX.ElementChildrenAttribute &
        JSX.LabelAttribute
    ): any
  }
}

declare module "vtex.search-result" {
  export function FilterNavigator(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  module FilterNavigator {
    export function V1(
      props: {
        [k: string]: any
      } & JSX.ElementChildrenAttribute &
        JSX.LabelAttribute
    ): any
  }
  module FilterNavigator {
    export function V2(
      props: {
        [k: string]: any
      } & JSX.ElementChildrenAttribute &
        JSX.LabelAttribute
    ): any
  }
  module FilterNavigator {
    export function V3(
      props: {
        [k: string]: any
      } & JSX.ElementChildrenAttribute &
        JSX.LabelAttribute
    ): any
  }
  export function Gallery(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function NotFound(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function OrderBy(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  module OrderBy {
    export function V2(
      props: {
        [k: string]: any
      } & JSX.ElementChildrenAttribute &
        JSX.LabelAttribute
    ): any
  }
  export function SearchContent(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function SearchFetchMore(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function SearchFetchPrevious(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function SearchLayoutSwitcher(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function SearchNotFoundLayout(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function SearchProductsCountPerPage(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function SearchResult(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function SearchResultLayout(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  module SearchResultLayout {
    export function CustomQuery(
      props: {
        [k: string]: any
      } & JSX.ElementChildrenAttribute &
        JSX.LabelAttribute
    ): any
  }
  module SearchResultLayout {
    export function Desktop(
      props: {
        [k: string]: any
      } & JSX.ElementChildrenAttribute &
        JSX.LabelAttribute
    ): any
  }
  module SearchResultLayout {
    export function Mobile(
      props: {
        [k: string]: any
      } & JSX.ElementChildrenAttribute &
        JSX.LabelAttribute
    ): any
  }
  export function SearchTitle(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  module SearchTitle {
    export function V2(
      props: {
        [k: string]: any
      } & JSX.ElementChildrenAttribute &
        JSX.LabelAttribute
    ): any
  }
  export function TotalProducts(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  module TotalProducts {
    export function V2(
      props: {
        [k: string]: any
      } & JSX.ElementChildrenAttribute &
        JSX.LabelAttribute
    ): any
  }
}

declare module "vtex.shelf" {
  export function Shelf(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  module Shelf {
    export function RelatedProducts(
      props: {
        [k: string]: any
      } & JSX.ElementChildrenAttribute &
        JSX.LabelAttribute
    ): any
  }
  module Shelf {
    export function Tabbed(
      props: {
        [k: string]: any
      } & JSX.ElementChildrenAttribute &
        JSX.LabelAttribute
    ): any
  }
}

declare module "vtex.shop-review-interfaces" {
  export function ShopReviewBadge(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function ShopReviewForm(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function ShopReviewSummary(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
}

declare module "vtex.slider-layout" {
  export function SliderLayout(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
}

declare module "vtex.stack-layout" {
  export function StackLayout(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
}

declare module "vtex.sticky-layout" {
  export function StickyLayout(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
}

declare module "vtex.store-components" {
  export function AutocompleteResultList(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function AvailabilitySubscriber(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function BuyButton(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function Image(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function InfoCard(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function Logo(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function Newsletter(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function Notification(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  module Notification {
    export function Bar(
      props: {
        [k: string]: any
      } & JSX.ElementChildrenAttribute &
        JSX.LabelAttribute
    ): any
  }
  module Notification {
    export function Inline(
      props: {
        [k: string]: any
      } & JSX.ElementChildrenAttribute &
        JSX.LabelAttribute
    ): any
  }
  export function ProductBrand(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function ProductDescription(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function ProductHighlights(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function ProductImages(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function ProductName(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function ProductPrice(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function ProductSeparator(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function ProductServices(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function ProductSpecifications(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function SearchBar(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function Share(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function ShippingSimulator(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function SkuSelector(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function UserAddress(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
}

declare module "vtex.store-drawer" {
  export function Drawer(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
}

declare module "vtex.store-footer" {
  export function AcceptedPaymentMethods(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function Footer(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function FooterLayout(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  module FooterLayout {
    export function Desktop(
      props: {
        [k: string]: any
      } & JSX.ElementChildrenAttribute &
        JSX.LabelAttribute
    ): any
  }
  module FooterLayout {
    export function Mobile(
      props: {
        [k: string]: any
      } & JSX.ElementChildrenAttribute &
        JSX.LabelAttribute
    ): any
  }
  export function FooterRow(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function FooterSpacer(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function PoweredBy(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function SocialNetworks(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
}

declare module "vtex.store-header" {
  export function Header(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function HeaderBorder(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function HeaderForceCenter(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function HeaderLayout(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  module HeaderLayout {
    export function Desktop(
      props: {
        [k: string]: any
      } & JSX.ElementChildrenAttribute &
        JSX.LabelAttribute
    ): any
  }
  module HeaderLayout {
    export function DesktopScroll(
      props: {
        [k: string]: any
      } & JSX.ElementChildrenAttribute &
        JSX.LabelAttribute
    ): any
  }
  module HeaderLayout {
    export function Mobile(
      props: {
        [k: string]: any
      } & JSX.ElementChildrenAttribute &
        JSX.LabelAttribute
    ): any
  }
  module HeaderLayout {
    export function MobileScroll(
      props: {
        [k: string]: any
      } & JSX.ElementChildrenAttribute &
        JSX.LabelAttribute
    ): any
  }
  export function HeaderRow(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function HeaderSpacer(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  module Header {
    export function Full(
      props: {
        [k: string]: any
      } & JSX.ElementChildrenAttribute &
        JSX.LabelAttribute
    ): any
  }
  export function Theme(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function UnstableHeaderBorder(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function UnstableHeaderLayout(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  module UnstableHeaderLayout {
    export function Desktop(
      props: {
        [k: string]: any
      } & JSX.ElementChildrenAttribute &
        JSX.LabelAttribute
    ): any
  }
  module UnstableHeaderLayout {
    export function DesktopScroll(
      props: {
        [k: string]: any
      } & JSX.ElementChildrenAttribute &
        JSX.LabelAttribute
    ): any
  }
  module UnstableHeaderLayout {
    export function Mobile(
      props: {
        [k: string]: any
      } & JSX.ElementChildrenAttribute &
        JSX.LabelAttribute
    ): any
  }
  module UnstableHeaderLayout {
    export function MobileScroll(
      props: {
        [k: string]: any
      } & JSX.ElementChildrenAttribute &
        JSX.LabelAttribute
    ): any
  }
  export function UnstableHeaderRow(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
}

declare module "vtex.store-icons" {
  export function Icon(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function IconArrowBack(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function IconAssistantSales(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function IconBookmark(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function IconCaret(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function IconCart(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function IconCheck(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function IconClose(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function IconDelete(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function IconEquals(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function IconEyeSight(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function IconFilter(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function IconGlobe(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function IconGrid(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function IconHeart(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function IconHome(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function IconInlineGrid(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function IconLocationInput(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function IconLocationMarker(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function IconMenu(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function IconMinus(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function IconPlus(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function IconProfile(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function IconRemove(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function IconSearch(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function IconSingleGrid(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function IconSocial(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function IconStar(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function IconSwap(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
}

declare module "vtex.store-image" {
  export function ImageNew(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function ImageSlider(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  module ListContext {
    export function ImageList(
      props: {
        [k: string]: any
      } & JSX.ElementChildrenAttribute &
        JSX.LabelAttribute
    ): any
  }
}

declare module "vtex.store" {
  export function Fold(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  module Fold {
    export function Desktop(
      props: {
        [k: string]: any
      } & JSX.ElementChildrenAttribute &
        JSX.LabelAttribute
    ): any
  }
  module Fold {
    export function Mobile(
      props: {
        [k: string]: any
      } & JSX.ElementChildrenAttribute &
        JSX.LabelAttribute
    ): any
  }
  export function Challenge(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  module Challenge {
    export function Profile(
      props: {
        [k: string]: any
      } & JSX.ElementChildrenAttribute &
        JSX.LabelAttribute
    ): any
  }
  export function HighlightOverlay(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function HomeWrapper(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function ProductWrapper(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function PromoBar(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function SearchWrapper(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function Store(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  module Store {
    export function Account(
      props: {
        [k: string]: any
      } & JSX.ElementChildrenAttribute &
        JSX.LabelAttribute
    ): any
  }
  module Store {
    export function BlogCategory(
      props: {
        [k: string]: any
      } & JSX.ElementChildrenAttribute &
        JSX.LabelAttribute
    ): any
  }
  module Store {
    export function BlogHome(
      props: {
        [k: string]: any
      } & JSX.ElementChildrenAttribute &
        JSX.LabelAttribute
    ): any
  }
  module Store {
    export function BlogPost(
      props: {
        [k: string]: any
      } & JSX.ElementChildrenAttribute &
        JSX.LabelAttribute
    ): any
  }
  module Store {
    export function BlogSearchResult(
      props: {
        [k: string]: any
      } & JSX.ElementChildrenAttribute &
        JSX.LabelAttribute
    ): any
  }
  module Store {
    export function Content(
      props: {
        [k: string]: any
      } & JSX.ElementChildrenAttribute &
        JSX.LabelAttribute
    ): any
  }
  module Store {
    export function Custom(
      props: {
        [k: string]: any
      } & JSX.ElementChildrenAttribute &
        JSX.LabelAttribute
    ): any
  }
  module Store {
    export function Home(
      props: {
        [k: string]: any
      } & JSX.ElementChildrenAttribute &
        JSX.LabelAttribute
    ): any
  }
  module Store {
    export function Login(
      props: {
        [k: string]: any
      } & JSX.ElementChildrenAttribute &
        JSX.LabelAttribute
    ): any
  }
  module Store {
    export function Offline(
      props: {
        [k: string]: any
      } & JSX.ElementChildrenAttribute &
        JSX.LabelAttribute
    ): any
  }
  module Store {
    export function Orderplaced(
      props: {
        [k: string]: any
      } & JSX.ElementChildrenAttribute &
        JSX.LabelAttribute
    ): any
  }
  module Store {
    export function Product(
      props: {
        [k: string]: any
      } & JSX.ElementChildrenAttribute &
        JSX.LabelAttribute
    ): any
  }
  module Store {
    export function ProductReviewForm(
      props: {
        [k: string]: any
      } & JSX.ElementChildrenAttribute &
        JSX.LabelAttribute
    ): any
  }
  module Store {
    export function Search(
      props: {
        [k: string]: any
      } & JSX.ElementChildrenAttribute &
        JSX.LabelAttribute
    ): any
  }
  export function StoreWrapper(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
}

declare module "vtex.tab-layout" {
  export function TabContent(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  module TabContent {
    export function Item(
      props: {
        [k: string]: any
      } & JSX.ElementChildrenAttribute &
        JSX.LabelAttribute
    ): any
  }
  export function TabLayout(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  export function TabList(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
  module TabList {
    export function Item(
      props: {
        [k: string]: any
      } & JSX.ElementChildrenAttribute &
        JSX.LabelAttribute
    ): any
  }
}

declare module "vtex.telemarketing" {
  export function Telemarketing(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
}

declare module "vtex.visibility-layout" {
  export function ExperimentalVisibilityLayout(
    props: {
      [k: string]: any
    } & JSX.ElementChildrenAttribute &
      JSX.LabelAttribute
  ): any
}